#!/usr/bin/env ruby

require 'rubygems'
require 'daemons'

ENV["RAILS_ENV"] = ARGV[1] || "development"

RAILS_ROOT = File.expand_path(File.dirname(__FILE__) + '/..')
require File.join(RAILS_ROOT, "config/environment")

Daemons.run_proc('delayed_jobs_demon', {
  :log_output => true, 
  :dir_mode => :normal, 
  :dir => "#{RAILS_ROOT}/log"
   }) do

  begin
    puts "*** Starting delayed job worker at #{Time.now} for #{ENV['RAILS_ENV']}\n"
    # these log output streams are closed and need to be reopened here
    my_logger = ActiveSupport::BufferedLogger.new(File.join(RAILS_ROOT, "log/delayed_jobs_demon.log"))
    my_logger.auto_flushing = true
    ActiveRecord::Base.logger = my_logger # for general logging
    ActionMailer::Base.logger = my_logger # for exception reporting  
    loop do                                                                                                     
      count=Synctask.count
      sleep(5)
      if count.zero? 
        puts 'Waiting for more jobs...'
      else
        p "Executing queued sync job"
        $stdout.flush
        Source.doqueuedsync
      end
    end
  rescue => e
    puts "exception in delayed_jobs_demon: #{e.inspect}\n"
    puts e.backtrace.join("\n")
  ensure 
    puts "ending delayed_jobs_demon at #{Time.now}\n"
  end
end